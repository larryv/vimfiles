" vimrc.local.sample
" ------------------
"
" Written in 2021 by Lawrence Vel√°zquez <vq@larryv.me>.
"
" To the extent possible under law, the author(s) have dedicated all
" copyright and related and neighboring rights to this software to the
" public domain worldwide.  This software is distributed without any
" warranty.
"
" You should have received a copy of the CC0 Public Domain Dedication
" along with this software.  If not, see
" <http://creativecommons.org/publicdomain/zero/1.0/>.
"
" SPDX-License-Identifier: CC0-1.0


" Copy to home directory and edit to taste.


" https://ethanschoonover.com/solarized/
silent! colorscheme solarized

" When I use paper, I use patriotic American paper.
set printoptions+=paper:letter

" Use non-ASCII characters in options, where useful.
if has('multi_byte')
    let g:multibyte_optvals = {'latin1': {}, 'utf-8': {}}

    " ----- listchars -----

    let g:multibyte_optvals['latin1'].listchars = &listchars

    " Use raw bytes to avoid assumptions about the current 'encoding'.
    let s:lcs = "eol:\xc2\xb6"              " U+00B6 PILCROW SIGN
    let s:lcs .= ",trail:\xc2\xb7"          " U+00B7 MIDDLE DOT
    let s:lcs .= ",extends:\xe2\x86\x92"    " U+2192 RIGHTWARDS ARROW
    let s:lcs .= ",precedes:\xe2\x86\x90"   " U+2190 LEFTWARDS ARROW
    let s:lcs .= ",nbsp:\xc2\xb7"           " U+00B7 MIDDLE DOT
    " U+2192 RIGHTWARDS ARROW, U+23AF HORIZONTAL LINE EXTENSION
    if v:version > 801 || (v:version == 801 && has('patch759'))
        let s:lcs .= ",tab:\xe2\x8e\xaf\xe2\x8e\xaf\xe2\x86\x92"
    else
        let s:lcs .= ",tab:\xe2\x86\x92\xe2\x8e\xaf"
    endif

    let g:multibyte_optvals['utf-8'].listchars = s:lcs
    unlet s:lcs

    " ----- showbreak -----

    " U+21AA RIGHTWARDS ARROW WITH HOOK
    " Technically, I shouldn't be using this because it's not a single-
    " cell character, but it works well enough in Apple Terminal when
    " followed by a space.  Unfortunately, MacVim sometimes renders the
    " space *over* the head of the arrow, cutting it off.  Fortunately,
    " I show line numbers in MacVim, making this much less necessary.
    if has('linebreak') && !has('gui_running')
        let g:multibyte_optvals['latin1'].showbreak = &showbreak
        let g:multibyte_optvals['utf-8'].showbreak = "\xe2\x86\xaa "
    endif
endif
